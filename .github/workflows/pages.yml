name: Build Example PDF files

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PDC_VER: '2.18'
  TECTONIC_VER: '0.9.0'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup pandoc
        run: |
          echo "Installing pandoc version ${PDC_VER}"
          wget -qO- https://github.com/jgm/pandoc/releases/download/${PDC_VER}/pandoc-${PDC_VER}-linux-amd64.tar.gz | sudo tar xvzf - --strip-components 1 -C /usr/local/
      - name: Tectonic Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/Tectonic
          key: ${{ runner.os }}-tectonic-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-tectonic-
      - uses: wtfjoke/setup-tectonic@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tectonic-version: ${{ env.TECTONIC_VER }}
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - name: Setup fonts and image convertion tool
        run: sudo apt-get update -qq && sudo apt-get install fonts-noto-cjk poppler-utils -qqy
      - name: Build pdf files
        run: cd examples && bash build-examples.sh && cd ..
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            examples/*/document.pdf
            examples/*/preview.png
      - name: Build index page
        run: |
          pandoc --toc --template=GitHub.html5 ./examples/index.md -o ./examples/index.htmm
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./examples

  # Deployment job
  deploy:
    needs: build
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
