image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - deploy

# Source: https://blog.callr.tech/building-docker-images-with-gitlab-ci-best-practices/
docker-build:
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # fetches the latest image (not failing if image is not found)
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE:latest
      --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
      --label "org.opencontainers.image.url=$CI_PROJECT_URL"
      --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
      --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
      --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME"
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      .
    - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - "[[ ${#CI_COMMIT_TAG} -gt 0 ]] && docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker push $CI_REGISTRY_IMAGE --all-tags
  only:
    changes:
      - Dockerfile
      - requirements.txt
      - .gitlab-ci.yml

test image:
  image: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - (cd examples; bash build-examples.sh)
  artifacts:
    paths:
      - examples
  only:
    - merge_requests

pages:
  image: "$CI_REGISTRY_IMAGE:latest"
  stage: deploy
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - (cd examples; bash build-examples.sh)
    - pandoc --toc --template=GitHub.html5 ./examples/index.md -o ./examples/index.html
    - mv examples public
  artifacts:
    paths:
      - public
  only:
    - main
